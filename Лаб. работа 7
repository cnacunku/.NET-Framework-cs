using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace NETFramework_cs_7
{
    internal class NETFramework_cs_7
    {
        static Random rnd = new Random();
        static void Main()
        {
            int choice;
        startMenu:
            try
            {
                do
                {
                    Console.WriteLine("\nВыберите действие (1-n) или 0 для выхода:");
                    Console.WriteLine("1. Задание 1.1 - Посчитать кол-во строк двумерного массива, в которых есть максимальный по модулю элемент");
                    Console.WriteLine("2. Задание 1.2 - Даны x, y, z. Вычислить значения a, b по формулам из 1 л.р.");
                    Console.WriteLine("3. Задание 1.3 - Нахождение количества нулей одномерного массива");
                    Console.WriteLine("4. Задание 2   - Вычисение u, v, k процедурами с применением ссылочных параметров с модификаторами ref, out, in");
                    Console.WriteLine("5. Задание 3   - Нахождение максимальной нечетной цифры в четырёхзначном числе");
                    Console.WriteLine("6. Задание 4   - Нахождение площади треугольника по координатам 3-х точек");
                    Console.WriteLine("0. Выход");
                    Console.Write("Выберите действие: ");

                    choice = Convert.ToInt32(Console.ReadLine());

                    switch (choice)
                    {
                        case 1:
                            First_1();
                            break;
                        case 2:
                            First_2();
                            break;
                        case 3:
                            First_3();
                            break;
                        case 4:
                            Second();
                            break;
                        case 5:
                            Third();
                            break;
                        case 6:
                            Fourth();
                            break;
                        case 0:
                            Console.WriteLine("Выход из программы");
                            break;
                        default:
                            Console.WriteLine("Несуществующее действие, попробуйте снова");
                            break;
                    }
                } while (choice != 0);
            }
            catch
            {
                Console.WriteLine("Ошибка. Введите целочисленное число");
                goto startMenu;
            }
        }

        static void First_1()
        {
            int n;
        startFirst_11:
            Console.Write("Введите количество строк n для одномерного массива: ");
            if (!int.TryParse(Console.ReadLine(), out n) || n <= 0)
            {
                Console.WriteLine("Ошибка. n должно быть целым числом и больше 0");
                goto startFirst_11;
            }

            int m;
        startFirst_12:
            Console.Write("Введите количество столбцов m для двумерного массива: ");
            if (!int.TryParse(Console.ReadLine(), out m) || m <= 0)
            {
                Console.WriteLine("Ошибка. m должно быть целым числом и больше 0");
                goto startFirst_12;
            }

            double[,] A = new double[n, m];

            int choiceR1;
            while (true)
            {
                Console.Write("(1) Ввести массив вручную; (2) Заполнить массив случайными числами (от -9 до 9): ");
                if (int.TryParse(Console.ReadLine(), out choiceR1) && (choiceR1 == 1 || choiceR1 == 2))
                {
                    break;
                }
                else
                {
                    Console.WriteLine("Несуществующий выбор, введите 1 или 2\n");
                }
            }

            FillArray2D(A, "A", choiceR1);

            Console.WriteLine("\nМассив A:");
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < m; j++)
                    Console.Write($"{A[i, j],4}");
                Console.WriteLine();
            }

            double maxAbs = Math.Abs(A[0, 0]);
            for (int i = 0; i < n; i++)
                for (int j = 0; j < m; j++)
                    if (Math.Abs(A[i, j]) > maxAbs)
                        maxAbs = Math.Abs(A[i, j]);

            int count = 0;
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    if (Math.Abs(A[i, j]) == maxAbs)
                    {
                        count++;
                        break;
                    }
                }
            }

            Console.WriteLine($"\nМаксимальные по модулю элементы: {maxAbs}, {(-1) * maxAbs}");
            Console.WriteLine($"Количество строк, содержащих максимальный по модулю элемент массива: {count}");

        }
        static void First_2()
        {
        startFirst_21:
            double x, y, z, a, b, znam;
            Console.Write("Введите x: ");
            if (!double.TryParse(Console.ReadLine(), out x) || Math.Abs(x) == 0)
            {
                Console.WriteLine("Ошибка. x должен быть числом, отличным от 0 (Знаменатель в фурмулах a, b не может быть равным 0)");
                goto startFirst_21;
            }
        startFirst_22:
            Console.Write("Введите y: ");
            if (!double.TryParse(Console.ReadLine(), out y))
            {
                Console.WriteLine("Ошибка. y должен быть числом");
                goto startFirst_22;
            }
        startFirst_23:
            Console.Write("Введите z: ");
            if (!double.TryParse(Console.ReadLine(), out z))
            {
                Console.WriteLine("Ошибка. z должен быть числом");
                goto startFirst_23;
            }

            znam = z + Math.Pow(x, 2) / 4;

            if (Math.Abs(znam) == 0)
            {
                Console.WriteLine("Ошибка. Знаменатель в выражении a равен нулю (z + (x^2)/4 = 0)");
                goto startFirst_21;
            }

            double insideLog = Math.Abs((y - Math.Sqrt(Math.Abs(x))) * (x - y / znam));

            if (insideLog <= 0) 
            {
                Console.WriteLine("Ошибка. Подлогарифмическое выражение <= 0, попробуйте снова");
                goto startFirst_21;
            }

            a = Math.Log(insideLog);
            Console.WriteLine($"a = {a}");
            
            b = x - Math.Pow(x, 2) / 3 + (x + y) / x;
            Console.WriteLine($"b = {b}");
        }
        static void First_3()
        {
            int k;
        startFirst_11:
            Console.Write("Введите количество элементов k для одномерного массива: ");
            if (!int.TryParse(Console.ReadLine(), out k) || k <= 0)
            {
                Console.WriteLine("Ошибка. k должно быть целым числом и больше 0");
                goto startFirst_11;
            }

            double[] B = new double[k];

            int choiceR2;
            while (true)
            {
                Console.Write("(1) Ввести массив вручную; (2) Заполнить массив случайными числами (от -9 до 9): ");
                if (int.TryParse(Console.ReadLine(), out choiceR2) && (choiceR2 == 1 || choiceR2 == 2))
                {
                    break;
                }
                else
                {
                    Console.WriteLine("Несуществующий выбор, введите 1 или 2\n");
                }
            }

            FillArray1D(B, "B", choiceR2);

            Console.WriteLine("\nМассив B: " + string.Join(", ", B));

            int count = 0;

            foreach (var element in B)
            {
                if (Math.Abs(element) < 1e-9)
                    count++;
            }

            Console.WriteLine("Количество нулей в массиве: " + count);
        }

        static void Second()
        {
            double a, b;
        startSecond_1:
            Console.Write("Введите a: ");
            if (!double.TryParse(Console.ReadLine(), out a))
            {
                Console.WriteLine("Ошибка: a должно быть числом");
                goto startSecond_1;
            }
        startSecond_2:
            Console.Write("Введите b: ");
            if (!double.TryParse(Console.ReadLine(), out b))
            {
                Console.WriteLine("Ошибка: b должно быть числом");
                goto startSecond_2;
            }

            CalcU(in a, in b, out double u);
            CalcV(in a, in b, out double v);
            CalcK(ref u, ref v, out double k);

            Console.WriteLine($"\nРезультаты вычислений:");
            Console.WriteLine($"u = {u:F3}");
            Console.WriteLine($"v = {v:F3}");
            Console.WriteLine($"k = {k:F3}");
        }

        static void CalcU(in double a, in double b, out double u)
        {
            u = Math.Max(a, b - a);
        }
        static void CalcV(in double a, in double b, out double v)
        {
            v = Math.Min(a * b, a + b);
        }
        static void CalcK(ref double u, ref double v, out double k)
        {
            k = Math.Min(u + v * 2, 3.14);
        }

        static void Third()
        {
            int number;
        startThird:
            Console.Write("Введите четырёхзначное число: ");
            if (!int.TryParse(Console.ReadLine(), out number) || number < 1000 || number > 9999)
            {
                Console.WriteLine("Ошибка. Нужно ввести целое четырёхзначное число");
                goto startThird;
            }

            FindMaxOddDigit(in number, out int maxOdd);

            if (maxOdd == -1)
                Console.WriteLine($"Максимальная нечётная цифра: {maxOdd} (не найдено)");
            else
                Console.WriteLine($"Максимальная нечётная цифра: {maxOdd}");
        }

        static void FindMaxOddDigit(in int number, out int maxOdd)
        {
            maxOdd = -1;

            int temp = number;

            while (temp > 0)
            {
                int digit = temp % 10;
                if (digit % 2 != 0 && digit > maxOdd)
                {
                    maxOdd = digit;
                }
                temp /= 10;
            }
        }

        static void Fourth()
        {
            double x1, y1, x2, y2, x3, y3;

            Console.WriteLine("Введите координаты точек в формате: 'x y' (через пробел)");
            Console.WriteLine("Если хотите пропустить ввод через Enter, то по умолчанию будут использованы координаты A(0,0), B(2,0), C(1,2)");

            ReadPoint("A", 0, 0, out x1, out y1);
            ReadPoint("B", 2, 0, out x2, out y2);
            ReadPoint("C", 1, 2, out x3, out y3);

            double perimetr = PERIMETR(x1, y1, x2, y2, x3, y3);
            double p = perimetr / 2;

            double AB, BC, AC;
            RAST(in x1, in y1, in x2, in y2, out AB);
            RAST(in x2, in y2, in x3, in y3, out BC);
            RAST(in x1, in y1, in x3, in y3, out AC);

            double S = Math.Sqrt(p * (p - AB) * (p - BC) * (p - AC));

            Console.WriteLine($"\nДлина сторон треугольника:\nAB = {AB:F3}\nBC = {BC:F3}\nAC = {AC:F3}");
            Console.WriteLine($"Периметр треугольника: {perimetr:F3}");
            Console.WriteLine($"Площадь треугольника: {S:F3}");
        }

        static void ReadPoint(string pointName, double defaultX, double defaultY, out double x, out double y)
        {
        StartInput: 
            Console.Write($"Введите координаты точки {pointName}: ");
            string input = Console.ReadLine();

            if (string.IsNullOrWhiteSpace(input))
            {
                x = defaultX;
                y = defaultY;
                return;
            }

            var parts = input.Split(' ');
            parts = parts.Where(s => !string.IsNullOrWhiteSpace(s)).ToArray();

            if (parts.Length != 2)
            {
                Console.WriteLine("Ошибка. Нужно ввести ДВА числа");
                goto StartInput;
            }

            if (!double.TryParse(parts[0], out x) || !double.TryParse(parts[1], out y))
            {
                Console.WriteLine("Ошибка. Координаты должны быть числами");
                goto StartInput;
            }
        }

        static void RAST(in double x1, in double y1, in double x2, in double y2, out double dist)
        {
            dist = Math.Sqrt(Math.Pow(x2 - x1, 2) + Math.Pow(y2 - y1, 2));
        }

        static double PERIMETR(
            double x1 = 0, double y1 = 0,
            double x2 = 2, double y2 = 0,
            double x3 = 1, double y3 = 2)
        {
            double AB, BC, AC;

            RAST(in x1, in y1, in x2, in y2, out AB);
            RAST(in x2, in y2, in x3, in y3, out BC);
            RAST(in x1, in y1, in x3, in y3, out AC);

            return AB + BC + AC;
        }

        static void FillArray1D(double[] arr, string name, int choice)
        {
            if (choice == 1)
            {
                Console.WriteLine($"Введите {arr.Length} элементов массива {name}:");
                for (int i = 0; i < arr.Length; i++)
                {
                    while (true)
                    {
                        Console.Write($"{name}[{i}] = ");
                        if (double.TryParse(Console.ReadLine(), out arr[i]))
                            break;
                        Console.WriteLine("Ошибка. Введите число");
                    }
                }
            }
            else
            {
                for (int i = 0; i < arr.Length; i++)
                    arr[i] = rnd.Next(-9, 10);
                Console.WriteLine($"Массив {name} заполнен случайными числами(От -9 до 9)");
            }
        }

        static void FillArray2D(double[,] arr, string name, int choice)
        {
            if (choice == 1)
            {
                for (int i = 0; i < arr.GetLength(0); i++)
                {
                    for (int j = 0; j < arr.GetLength(1); j++)
                    {
                        while (true)
                        {
                            Console.Write($"{name}[{i},{j}] = ");
                            if (double.TryParse(Console.ReadLine(), out arr[i, j]))
                                break;
                            Console.WriteLine("Ошибка. Введите число");
                        }
                    }
                }
            }
            else
            {
                for (int i = 0; i < arr.GetLength(0); i++)
                {
                    for (int j = 0; j < arr.GetLength(1); j++)
                    {
                        arr[i, j] = rnd.Next(-9, 10);
                    }
                }
                Console.WriteLine($"Массив {name} заполнен случайными числами(От -9 до 9)");
            }
        }
    }
}
